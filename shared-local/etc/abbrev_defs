;;-*-coding: utf-8;-*-
(define-abbrev-table 'c++-mode-abbrev-table
  '(
    ("contiue" "continue" nil :count 0)
   ))

(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("afterj1" "after!" nil :count 2)
    ("alit" "alist" nil :count 2)
    ("asni" "ansi" nil :count 2)
    ("bactrace" "backtrace" nil :count 1)
    ("bindngs" "bindings" nil :count 1)
    ("comand" "command" nil :count 1)
    ("compiloation" "compilation" nil :count 0)
    ("conat" "concat" nil :count 1)
    ("conct" "concat" nil :count 1)
    ("dafun" "defun" nil :count 1)
    ("deffun" "defun" nil :count 1)
    ("defvr" "defvar" nil :count 1)
    ("deun" "defun" nil :count 1)
    ("devar" "defvar" nil :count 1)
    ("eeq" "eq" nil :count 1)
    ("esell" "eshell" nil :count 1)
    ("etq" "setq" nil :count 3)
    ("frogn" "progn" nil :count 1)
    ("funcl" "funcall" nil :count 1)
    ("hoo" "hook" nil :count 2)
    ("iseatrch" "isearch" nil :count 1)
    ("lipy" "lispy" nil :count 2)
    ("lit" "list" nil :count 1)
    ("lookibf" "looking" nil :count 2)
    ("lop" "loop" nil :count 1)
    ("mdoulep" "modulep!" nil :count 1)
    ("mesage" "message" nil :count 1)
    ("modilep" "modulep" nil :count 1)
    ("modulep" "modulep" nil :count 15)
    ("mrp" "map" nil :count 1)
    ("olfun" "oldfun" nil :count 1)
    ("oncat" "concat" nil :count 2)
    ("package1" "package!" nil :count 1)
    ("packagej1" "package!" nil :count 2)
    ("prgon" "progn" nil :count 1)
    ("remowe" "remove" nil :count 1)
    ("seopt" "setopt" nil :count 1)
    ("tremacs" "treemacs" nil :count 1)
    ("winnum" "winum" nil :count 1)
   ))

(define-abbrev-table 'eshell-mode-abbrev-table
  '(
    ("compie" "compile" nil :count 1)
    ("depcean" "depclean" nil :count 1)
    ("doo" "doom" nil :count 3)
    ("doomd" "doom.d" nil :count 1)
    ("emrege" "emerge" nil :count 1)
    ("fie" "file" nil :count 1)
    ("maidir" "maildir" nil :count 1)
    ("restar" "restart" nil :count 1)
    ("tailcale" "tailscale" nil :count 1)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("activve" "active" nil :count 0)
    ("adress" "address" nil :count 0)
    ("advicce" "advice" nil :count 0)
    ("aftr" "after" nil :count 0)
    ("aftre" "after" nil :count 0)
    ("alises" "aliases" nil :count 0)
    ("aplication" "application" nil :count 0)
    ("ariound" "around" nil :count 0)
    ("arounhd" "around" nil :count 0)
    ("asni" "ansi" nil :count 0)
    ("atuo" "auto" nil :count 0)
    ("backgroudn" "background" nil :count 0)
    ("benchmrk" "benchmark" nil :count 0)
    ("beter" "better" nil :count 0)
    ("bffer" "buffer" nil :count 0)
    ("bookmmrk" "bookmark" nil :count 0)
    ("botjh" "both" nil :count 0)
    ("brokne" "broken" nil :count 0)
    ("chekcing" "checking" nil :count 0)
    ("cler" "clear" nil :count 0)
    ("clnoe" "clone" nil :count 0)
    ("coment" "comment" nil :count 0)
    ("completio" "completion" nil :count 0)
    ("compnay" "company" nil :count 1)
    ("configuation" "configuration" nil :count 0)
    ("configurathon" "configuration" nil :count 0)
    ("confiugration" "configuration" nil :count 0)
    ("confiugrations" "configurations" nil :count 0)
    ("converison" "conversion" nil :count 0)
    ("corect" "correct" nil :count 0)
    ("corects" "corrects" nil :count 0)
    ("corretly" "correctly" nil :count 0)
    ("curent" "current" nil :count 0)
    ("curently" "currently" nil :count 0)
    ("deete" "delete" nil :count 0)
    ("defauit" "default" nil :count 0)
    ("degredation" "degradation" nil :count 0)
    ("delet" "delete" nil :count 1)
    ("deskotp" "desktop" nil :count 0)
    ("doomm" "doom" nil :count 0)
    ("dooom" "doom" nil :count 2)
    ("ecits" "exits" nil :count 0)
    ("editro" "editor" nil :count 0)
    ("ehco" "echo" nil :count 0)
    ("ehsell" "eshell" nil :count 1)
    ("eitors" "editors" nil :count 1)
    ("eivl" "evil" nil :count 0)
    ("emial" "email" nil :count 0)
    ("enbale" "enable" nil :count 0)
    ("erorr" "error" nil :count 0)
    ("erors" "errors" nil :count 0)
    ("eveywhere" "everywhere" nil :count 0)
    ("excpet" "except" nil :count 0)
    ("exfort" "export" nil :count 0)
    ("finaly" "finally" nil :count 1)
    ("fnd" "find" nil :count 0)
    ("foregorund" "foreground" nil :count 0)
    ("formars" "formats" nil :count 1)
    ("fter" "after" nil :count 0)
    ("fuction" "function" nil :count 0)
    ("funciton" "function" nil :count 0)
    ("garbagbe" "garbage" nil :count 0)
    ("gargbage" "garbage" nil :count 0)
    ("geting" "getting" nil :count 0)
    ("harhat" "hardhat" nil :count 0)
    ("hcange" "change" nil :count 0)
    ("hitory" "history" nil :count 0)
    ("hlelo" "hello" nil :count 0)
    ("hok" "hook" nil :count 1)
    ("hoook" "hook" nil :count 1)
    ("hrad" "hard" nil :count 0)
    ("htat" "that" nil :count 0)
    ("hte" "the" nil :count 1)
    ("hwat" "what" nil :count 0)
    ("hwitespace" "whitespace" nil :count 0)
    ("ifnally" "finally" nil :count 0)
    ("ignroe" "ignore" nil :count 0)
    ("inesrt" "insert" nil :count 0)
    ("initialie" "initialize" nil :count 0)
    ("instal" "install" nil :count 1)
    ("intiialize" "initialize" nil :count 0)
    ("iusers" "users" nil :count 0)
    ("iwth" "with" nil :count 1)
    ("keybidnigns" "keybindings" nil :count 1)
    ("laso" "also" nil :count 0)
    ("laucnh" "launch" nil :count 0)
    ("laymann" "layman" nil :count 0)
    ("locatiion" "location" nil :count 0)
    ("locl" "local" nil :count 0)
    ("lokup" "lookup" nil :count 0)
    ("maow" "meow" nil :count 0)
    ("mathc" "match" nil :count 0)
    ("mathces" "matches" nil :count 0)
    ("mdoe" "mode" nil :count 1)
    ("messge" "message" nil :count 0)
    ("mistkaes" "mistakes" nil :count 1)
    ("mmake" "make" nil :count 1)
    ("modiule" "module" nil :count 0)
    ("mroe" "more" nil :count 0)
    ("naalyzer" "analyzer" nil :count 0)
    ("occurence" "occurrence" nil :count 0)
    ("oktline" "outline" nil :count 0)
    ("optioal" "optional" nil :count 0)
    ("ormat" "format" nil :count 1)
    ("outlinhe" "outline" nil :count 0)
    ("pacage" "package" nil :count 3)
    ("paclage" "package" nil :count 0)
    ("pakage" "package" nil :count 0)
    ("pakcage" "package" nil :count 1)
    ("pcakage" "package" nil :count 3)
    ("pckage" "package" nil :count 0)
    ("perormance" "performance" nil :count 1)
    ("pgae" "page" nil :count 0)
    ("picutre" "picture" nil :count 1)
    ("picutres" "pictures" nil :count 0)
    ("poewr" "power" nil :count 0)
    ("privte" "private" nil :count 0)
    ("procesors" "processors" nil :count 0)
    ("proivders" "providers" nil :count 0)
    ("projetc" "project" nil :count 0)
    ("provder" "provider" nil :count 0)
    ("rainbw" "rainbow" nil :count 0)
    ("rebuid" "rebuild" nil :count 0)
    ("regisetr" "register" nil :count 0)
    ("reiurn" "return" nil :count 0)
    ("remve" "remove" nil :count 0)
    ("requirt" "require" nil :count 0)
    ("requore" "require" nil :count 0)
    ("retgion" "region" nil :count 0)
    ("righteouss" "righteous" nil :count 0)
    ("rlias" "alias" nil :count 0)
    ("rmeember" "remember" nil :count 0)
    ("rmeove" "remove" nil :count 1)
    ("rmoeved" "removed" nil :count 0)
    ("runing" "running" nil :count 0)
    ("scrol" "scroll" nil :count 0)
    ("seemlessly" "seamlessly" nil :count 0)
    ("shoyld" "should" nil :count 1)
    ("slvae" "slave" nil :count 0)
    ("smei" "semi" nil :count 0)
    ("sometims" "sometimes" nil :count 0)
    ("sycn" "sync" nil :count 0)
    ("syncx" "sync" nil :count 0)
    ("synvc" "sync" nil :count 0)
    ("sytem" "system" nil :count 0)
    ("takijng" "taking" nil :count 0)
    ("termibal" "terminal" nil :count 0)
    ("thnaks" "thanks" nil :count 0)
    ("threshol" "threshold" nil :count 0)
    ("throkgh" "through" nil :count 0)
    ("timeut" "timeout" nil :count 0)
    ("tjhen" "then" nil :count 0)
    ("treu" "true" nil :count 0)
    ("upstrem" "upstream" nil :count 0)
    ("uqit" "quit" nil :count 0)
    ("whenefer" "whenever" nil :count 0)
    ("whenn" "when" nil :count 0)
    ("whiel" "while" nil :count 0)
    ("whwen" "when" nil :count 0)
    ("willin" "willing" nil :count 0)
    ("workspcae" "workspace" nil :count 1)
    ("woudl" "would" nil :count 0)
    ("wuld" "would" nil :count 0)
    ("wyhen" "when" nil :count 0)
    ("ywllow" "yellow" nil :count 0)
   ))

(define-abbrev-table 'minibuffer-mode-abbrev-table
  '(
    ("funcal" "funcall" nil :count 1)
    ("mmagit" "magit" nil :count 1)
    ("posfraem" "posframe" nil :count 1)
   ))

